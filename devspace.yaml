---
version: v2beta1
name: splunk-arcade-scoreboard

vars:
  DEVSPACE_FLAGS: "-n splunk-arcade"

  SPLUNK_ARCADE_REGISTRY:
    source: env
    default: splunk-arcade

  SPLUNK_ARCADE_LOCAL_REGISTRY_ENABLED:
    source: env
    default: true

  SPLUNK_ARCADE_OBSERVABILITY_ACCESS_TOKEN:
    source: env
    default: REPLACE_ME

  IMAGE_PULL_POLICY: Always
  CABINET_IMAGE: ${SPLUNK_ARCADE_REGISTRY}/cabinet
  SCOREBOARD_IMAGE: ${SPLUNK_ARCADE_REGISTRY}/scoreboard
  PORTAL_IMAGE: ${SPLUNK_ARCADE_REGISTRY}/portal
  QUIZ_IMAGE: ${SPLUNK_ARCADE_REGISTRY}/quiz
  PLAYER_ROUTER_IMAGE: ${SPLUNK_ARCADE_REGISTRY}/player-router
  PY_IMAGE_DEV: ${SPLUNK_ARCADE_REGISTRY}/py-dev
  GO_IMAGE_DEV: ${SPLUNK_ARCADE_REGISTRY}/go-dev

  VERSION: 0.0.0
  COMMIT_HASH: $(git describe --always --abbrev=8)

localRegistry:
  enabled: ${SPLUNK_ARCADE_LOCAL_REGISTRY_ENABLED}

images:
  py-dev:
    createPullSecret: false
    image: ${PY_IMAGE_DEV}
    context: ./
    dockerfile: ./dev.py.Dockerfile
    rebuildStrategy: ignoreContextChanges
    tags:
      - ${COMMIT_HASH}

  go-dev:
    createPullSecret: false
    image: ${GO_IMAGE_DEV}
    context: ./
    dockerfile: ./dev.go.Dockerfile
    rebuildStrategy: ignoreContextChanges
    tags:
      - ${COMMIT_HASH}

  cabinet:
    createPullSecret: false
    image: ${CABINET_IMAGE}
    context: ./cabinet
    dockerfile: ./cabinet/Dockerfile
    rebuildStrategy: ignoreContextChanges
    tags:
      - latest
      - ${COMMIT_HASH}

  scoreboard:
    createPullSecret: false
    image: ${SCOREBOARD_IMAGE}
    context: ./scoreboard
    dockerfile: ./scoreboard/Dockerfile
    rebuildStrategy: ignoreContextChanges
    tags:
      - latest
      - ${COMMIT_HASH}

  portal:
    createPullSecret: false
    image: ${PORTAL_IMAGE}
    context: ./portal
    dockerfile: ./portal/Dockerfile
    rebuildStrategy: ignoreContextChanges
    tags:
      - latest
      - ${COMMIT_HASH}

  quiz:
    createPullSecret: false
    image: ${QUIZ_IMAGE}
    context: ./quiz
    dockerfile: ./quiz/Dockerfile
    rebuildStrategy: ignoreContextChanges
    tags:
      - latest
      - ${COMMIT_HASH}

  player-router:
    createPullSecret: false
    image: ${PLAYER_ROUTER_IMAGE}
    context: ./player-router
    dockerfile: ./player-router/Dockerfile
    rebuildStrategy: ignoreContextChanges
    tags:
      - latest
      - ${COMMIT_HASH}

deployments:
  splunk-arcade:
    helm:
      displayOutput: true
      chart:
        name: ./chart/
      values:
        splunk-otel-collector:
          splunkObservability:
            accessToken: ${SPLUNK_ARCADE_OBSERVABILITY_ACCESS_TOKEN}
        cabinet:
          image: ${CABINET_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
        scoreboard:
          image: ${SCOREBOARD_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
        portal:
          image: ${PORTAL_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
        quiz:
          image: ${QUIZ_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
        playerRouter:
          image: ${PLAYER_ROUTER_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}

dev:
  splunk-arcade:
    labelSelector:
      app.kubernetes.io/name: splunk-arcade-cabinet
    devImage: ${CABINET_IMAGE_DEV}
    sync:
      - path: ./cabinet/:/app
        disableDownload: true
        excludeFile: .dockerignore
    terminal:
      command: ./start-dev.sh
    ports:
    - port: "8080:5000"

profiles:
  - name: prod
    patches:
      - op: replace
        path: deployments.splunk-arcade.helm.values.arcadeHost
        value: splunkarcade.com

  - name: dev-cabinet
    patches:
      - op: add
        path: deployments.splunk-arcade.helm.values.players
        value:
          - devplayer
      - op: replace
        path: dev
        value:
          splunk-arcade:
            labelSelector:
              app.kubernetes.io/name: splunk-arcade-cabinet
            devImage: ${PY_IMAGE_DEV}
            sync:
              - path: ./cabinet/:/app
                disableDownload: true
                excludeFile: .dockerignore
            terminal:
              command: ./start-dev.sh
            ports:
              - port: "8080:5000"

  - name: dev-player-router
    patches:
      - op: add
        path: deployments.splunk-arcade.helm.values.players
        value:
          - devplayer
      - op: add
        path: deployments.splunk-arcade.helm.values.playerRouter.replicaCount
        value: 1
      - op: replace
        path: dev
        value:
          splunk-arcade:
            labelSelector:
              app.kubernetes.io/name: splunk-arcade-player-router
            devImage: ${GO_IMAGE_DEV}
            sync:
              - path: ./player-router/:/app
                disableDownload: true
                excludeFile: .dockerignore
            terminal:
              command: ./start-dev.sh
            ports:
              - port: "8080:5000"

  - name: dev-scoreboard
    patches:
      - op: replace
        path: dev
        value:
          splunk-arcade:
            labelSelector:
              app.kubernetes.io/name: splunk-arcade-scoreboard
            devImage: ${PY_IMAGE_DEV}
            sync:
              - path: ./scoreboard/:/app
                disableDownload: true
                excludeFile: .dockerignore
            terminal:
              command: ./start-dev.sh
            ports:
              - port: "8080:5000"

  - name: dev-portal
    patches:
      - op: replace
        path: dev
        value:
          splunk-arcade:
            labelSelector:
              app.kubernetes.io/name: splunk-arcade-portal
            devImage: ${PY_IMAGE_DEV}
            sync:
              - path: ./portal/:/app
                disableDownload: true
                excludeFile: .dockerignore
            terminal:
              command: ./start-dev.sh
            ports:
              - port: "8080:5000"

  - name: dev-quiz
    patches:
      - op: replace
        path: dev
        value:
          splunk-arcade:
            labelSelector:
              app.kubernetes.io/name: splunk-arcade-quiz
            devImage: ${PY_IMAGE_DEV}
            sync:
              - path: ./quiz/:/app
                disableDownload: true
                excludeFile: .dockerignore
            terminal:
              command: ./start-dev.sh
            ports:
              - port: "8080:5000"